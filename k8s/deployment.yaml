apiVersion: apps/v1
kind: Deployment
metadata:
  name: hotel-list-api
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel-list-api
  template:
    metadata:
      labels:
        app: hotel-list-api
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values:
                - www-node-pool-2
      containers:
        - name: api
          image: 564054097121.dkr.ecr.ap-southeast-1.amazonaws.com/hotel-list/api:dev-latest
          ports:
            - containerPort: 4000
          env:
            - name: POSTGRES_USER
              value: "user-admin"
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
            - name: POSTGRES_HOST
              value: "postgres.database"
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB
              value: "hotel_db"
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "4000"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          # Health checks
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 3

---
# 2. API Service - Fixed port mapping
apiVersion: v1
kind: Service
metadata:
  name: hotel-list-api
  namespace: apps
  annotations:
    # Health check configuration for ALB
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
spec:
  selector:
    app: hotel-list-api
  ports:
    - name: http
      protocol: TCP
      port: 4000
      targetPort: 4000
  type: ClusterIP

---
# 3. Web Deployment - Fixed environment variable
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hotel-list-web
  namespace: apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hotel-list-web
  template:
    metadata:
      labels:
        app: hotel-list-web
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: eks.amazonaws.com/nodegroup
                operator: In
                values: 
                - www-node-pool-2
      containers:
        - name: web
          image: 564054097121.dkr.ecr.ap-southeast-1.amazonaws.com/hotel-list/web:dev-latest
          ports:
            - containerPort: 80
          env:
            - name: BACKEND_URL
              value: "http://hotel-list-api.apps.svc.cluster.local:4000/graphql"
            - name: GRAPHQL_URI
              value: "https://hotel-list-api.nmdigital.cloud/graphql"
            - name: NODE_ENV
              value: "production"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5

---
# 4. Web Service - No changes needed
apiVersion: v1
kind: Service
metadata:
  name: hotel-list-web
  namespace: apps
spec:
  selector:
    app: hotel-list-web
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP