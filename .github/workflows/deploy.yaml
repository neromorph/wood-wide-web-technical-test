name: Build and Deploy to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files_yaml: |
            api:
              - 'packages/api/**'
            web:
              - 'packages/web/**'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push API image
        if: steps.changed-files.outputs.api_any_changed == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hotel-list-api
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --target api .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build and push Web image
        if: steps.changed-files.outputs.web_any_changed == 'true'
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hotel-list-web
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG --target web .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up Kubeconfig
        if: steps.changed-files.outputs.api_any_changed == 'true' || steps.changed-files.outputs.web_any_changed == 'true'
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Deploy to EKS
        if: steps.changed-files.outputs.api_any_changed == 'true' || steps.changed-files.outputs.web_any_changed == 'true'
        run: |
          sed -i "s|API_IMAGE_PLACEHOLDER|${{ steps.login-ecr.outputs.registry }}/hotel-list-api:${{ github.sha }}|g" k8s/deployment.yaml
          sed -i "s|WEB_IMAGE_PLACEHOLDER|${{ steps.login-ecr.outputs.registry }}/hotel-list-web:${{ github.sha }}|g" k8s/deployment.yaml
          kubectl apply -f k8s/deployment.yaml